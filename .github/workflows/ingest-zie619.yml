name: Ingest hosts from Zie619 (public)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes

jobs:
  ingest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      API_BASE: ${{ secrets.API_BASE }}   # e.g. https://p01--animated-cellar--xxx.code.run
    steps:
      - name: Fetch repos from Zie619
        run: |
          set -e
          curl -sSL -H "Accept: application/vnd.github+json" \
            "https://api.github.com/users/Zie619/repos?per_page=100&type=public&sort=updated" \
            > rows.json
          jq 'map({name,homepage,description,owner:(.owner.login)})' rows.json | tee repos.json

      - name: Extract hosts
        id: hosts
        run: |
          python3 - <<'PY'
          import json, re, sys, urllib.parse
          data = json.load(open("repos.json"))
          out = set()
          def host_from(u):
            if not u: return None
            u = u.strip()
            if not u: return None
            if "://" not in u: u = "https://" + u
            try:
              h = urllib.parse.urlparse(u).hostname or ""
              h = h.lower().lstrip("www.")
              return h if "." in h else None
            except: return None
          dom_re = re.compile(r'\b([a-z0-9-]+(?:\.[a-z0-9-]+)+)\b', re.I)
          for r in data:
            h = host_from(r.get("homepage")) or None
            if h: out.add(h)
            desc = r.get("description") or ""
            m = dom_re.search(desc)
            if m:
              d = m.group(1).lower()
              if not d.endswith("github.com"):
                out.add(d)
            owner = (r.get("owner") or "").lower()
            if owner:
              out.add(f"{owner}.github.io")
          arr = sorted(out)
          json.dump(arr, open("hosts.json","w"))
          print(json.dumps(arr))
          PY

      - name: POST hosts to API
        run: |
          set -e
          test -n "$API_BASE"
          curl -sS -X POST "$API_BASE/api/ingest/hosts" \
            -H "content-type: application/json" \
            --data @hosts.json | tee result.json