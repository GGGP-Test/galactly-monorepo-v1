name: Ingest leads from Zie619 (public)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes (GitHub minimum)

jobs:
  ingest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      API_BASE: ${{ secrets.API_BASE }}   # e.g. https://p01--animated-cellar--vz4ftkwrzdfs.code.run
    steps:
      - name: Install jq & python
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq python3

      - name: Fetch repos from Zie619
        run: |
          curl -sSL -H 'Accept: application/vnd.github+json' \
               -H 'User-Agent: ingest-workflow' \
               "https://api.github.com/users/zie619/repos?sort=updated&per_page=100" \
               > rows.json
          jq '[.[] | {name,homepage,description,topics,owner:(.owner//{})}]' rows.json > rows_slim.json
          cat rows_slim.json

      - name: Extract domains
        id: d
        run: |
          python3 - <<'PY'
          import json, re, urllib.parse
          rows = json.load(open('rows_slim.json'))
          def to_host(s):
            if not s: return None
            try:
              u = urllib.parse.urlparse(s if '://' in s else 'https://' + s)
              h = (u.hostname or '').lower()
              if h and h.startswith('www.'): h = h[4:]
              return h if '.' in h else None
            except Exception:
              s = (s or '').strip().lower()
              if s.startswith('www.'): s = s[4:]
              return s if '.' in s else None
          def domain_from_text(txt):
            if not txt: return None
            m = re.search(r'\b([a-z0-9-]+(?:\.[a-z0-9-]+)+)\b', txt, re.I)
            if not m: return None
            h = m.group(1).lower()
            return None if h.endswith('github.com') else h
          hosts = set()
          for r in rows:
            h = to_host(r.get('homepage')) or domain_from_text(r.get('description')) \
                or (r.get('owner',{}).get('login','').lower() + '.github.io' if r.get('owner',{}).get('login') else None)
            if h: hosts.add(h)
          json.dump(sorted(hosts), open('hosts.json','w'))
          print(open('hosts.json').read())
          PY

      - name: POST to /api/ingest/github
        run: |
          set -e
          curl -sS -X POST "$API_BASE/api/ingest/github" \
               -H "Content-Type: application/json" \
               --data-binary @hosts.json