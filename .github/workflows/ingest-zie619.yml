name: Ingest leads from Zie619 (public)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/15 * * * *"  # every 15 minutes

jobs:
  ingest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      API_BASE: ${{ secrets.API_BASE }} # e.g. https://p01--animated-cellar--vz4ftkwrzdfs.code.run
    steps:
      - name: Install jq & python
        run: sudo apt-get update -y && sudo apt-get install -y jq python3

      - name: Fetch repos from Zie619
        run: |
          curl -sSL -H 'Accept: application/vnd.github+json' \
            "https://api.github.com/users/Zie619/repos?per_page=100&sort=updated" > repos.json
          jq 'map({name,homepage,description,topics:(.topics//[]), owner:(.owner.login)})' repos.json > rows.json
          cat rows.json

      - name: Extract domains
        id: doms
        run: |
          python3 - <<'PY' rows.json
import json, re, sys, urllib.parse
rows = json.load(open('rows.json'))
def to_host(s):
  if not s: return None
  s = s.strip()
  try:
    u = urllib.parse.urlparse(s if '://' in s else f'https://{s}')
    h = (u.hostname or '').lower()
    if h.startswith('www.'): h = h[4:]
    if h and h.endswith('github.com'): return None
    return h if '.' in h else None
  except: pass
  m = re.search(r'\b([a-z0-9-]+(?:\.[a-z0-9-]+)+)\b', s, re.I)
  if m and not m.group(1).lower().endswith('github.com'):
    return m.group(1).lower()
  return None

seen = set()
out  = []
for r in rows:
  h = to_host(r.get('homepage')) or to_host(r.get('description'))
  if not h and r.get('owner'):
    h = f"{r['owner'].lower()}.github.io"
  if not h: continue
  if h in seen: continue
  seen.add(h)
  out.append({"host": h, "row": r})

json.dump(out, open('domains.json','w'))
print(json.dumps(out, indent=2))
PY
          echo "ready=1" >> $GITHUB_OUTPUT

      - name: POST to API
        if: ${{ steps.doms.outputs.ready == '1' }}
        run: |
          jq -c '.[]' domains.json | while read -r item; do
            host=$(echo "$item" | jq -r '.host')
            owner=$(echo "$item" | jq -r '.row.owner // ""')
            name=$(echo "$item" | jq -r '.row.name // ""')
            desc=$(echo "$item" | jq -r '.row.description // ""')
            topics=$(echo "$item" | jq -c '.row.topics // []')
            echo "POST $host"
            curl -sS -X POST "$API_BASE/api/ingest/github" \
              -H 'content-type: application/json' \
              --data "{\"homepage\":\"https://$host\",\"owner\":\"$owner\",\"name\":\"$name\",\"description\":$(
                printf %s "$(jq -Rn --arg d "$desc" '$d')" \
              ),\"topics\":$topics,\"temp\":\"warm\"}" \
              || true
          done