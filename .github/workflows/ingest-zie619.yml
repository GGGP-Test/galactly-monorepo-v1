name: Ingest leads from Zie619 (public)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes

jobs:
  ingest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      API_BASE: ${{ secrets.API_BASE }}
    steps:
      - name: Install jq & python
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq python3

      - name: Fetch repos from Zie619
        run: |
          curl -sSL -H 'Accept: application/vnd.github+json' \
            "https://api.github.com/users/Zie619/repos?per_page=100&sort=updated" > rows.json
          jq 'map({name,homepage,description,topics,owner:.owner.login})' rows.json > rows.min.json
          cat rows.min.json

      - name: Extract domains
        id: d
        run: |
          python3 - <<'PY'
          import json,re,sys,urllib.parse
          rows=json.load(open('rows.min.json'))
          out=[]
          def host_from(s):
              if not s: return None
              s=s.strip()
              try:
                  if '://' not in s: s='https://'+s
                  u=urllib.parse.urlparse(s)
                  h=(u.hostname or '').lower()
                  if h.startswith('www.'): h=h[4:]
                  return h if '.' in h and not h.endswith('github.com') else None
              except: return None
          doms=set()
          for r in rows:
              h=host_from(r.get('homepage'))
              if not h and r.get('description'):
                  m=re.search(r'\b([a-z0-9-]+(?:\.[a-z0-9-]+)+)\b', r['description'], re.I)
                  if m:
                      cand=m.group(1).lower()
                      if not cand.endswith('github.com'): h=cand
              if not h and r.get('owner'):
                  h=f"{r['owner'].lower()}.github.io"
              if h: doms.add(h)
          print(json.dumps(sorted(doms)))
          PY

      - name: POST to /api/ingest/github
        run: |
          DOMS=$(cat <<'JSON'
          $(cat <<'EOD'
          {"doms": $(cat <<'X' ; cat ; echo X)}
          EOD
          )
          JSON
          )
          echo "$DOMS" | jq -c '.doms|.[]' | while read -r d; do
            d=${d//\"/}
            curl -sS -X POST "$API_BASE/api/ingest/github" \
              -H 'Content-Type: application/json' \
              --data "{\"homepage\":\"https://$d\",\"owner\":\"zie619\",\"name\":\"$d\",\"description\":\"from Zie619\",\"topics\":[],\"temp\":\"warm\"}" \
              | jq -c .
          done