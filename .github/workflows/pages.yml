name: Deploy Pages (docs â†’ public)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PUBLIC_SRC: docs
  PUBLIC_OUT: public

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Assemble public site
        run: |
          set -euo pipefail

          rm -rf "$PUBLIC_OUT"
          mkdir -p "$PUBLIC_OUT"

          # ----- allow-list: FRONT-END ONLY (safe to publish) -----

          # Core HTML at repo root (copy if present)
          for f in index.html step3.html free-panel.html sectors.html pricing.html login.html 404.html terms.html privacy.html; do
            [ -f "$PUBLIC_SRC/$f" ] && cp -v "$PUBLIC_SRC/$f" "$PUBLIC_OUT/$f" || true
          done

          # Shared assets (copy whole folders if they exist)
          for d in assets img css js fonts media; do
            [ -d "$PUBLIC_SRC/$d" ] && rsync -a --delete "$PUBLIC_SRC/$d/" "$PUBLIC_OUT/$d/" || true
          done

          # Section bundles used by index.html (Orbit, Process, Trust, CTA, FAQ, future)
          if [ -d "$PUBLIC_SRC/sections" ]; then
            mkdir -p "$PUBLIC_OUT/sections"
            rsync -a --delete \
              --include='*/' \
              --include='*.html' \
              --include='*.css'  --include='*.js'  --include='*.data.js' --include='*.mjs' \
              --include='*.json' \
              --include='*.png'  --include='*.jpg' --include='*.jpeg' --include='*.webp' --include='*.gif' --include='*.svg' \
              --include='*.woff' --include='*.woff2' --include='*.ttf' \
              --exclude='*' \
              "$PUBLIC_SRC/sections/" "$PUBLIC_OUT/sections/"
          fi

          # Prevent Jekyll from processing
          : > "$PUBLIC_OUT/.nojekyll"

          echo "Public site contents:"
          find "$PUBLIC_OUT" -maxdepth 4 -type f -print

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4